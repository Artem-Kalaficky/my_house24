# Generated by Django 3.2 on 2022-07-01 12:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_joined', models.DateField(default=django.utils.timezone.now)),
                ('user_id', models.IntegerField(blank=True, default=1, null=True, unique=True, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=32, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=32, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=32, verbose_name='Отчество')),
                ('remember_me', models.BooleanField(default=False, verbose_name='Запомнить меня')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='gallery/', verbose_name='Аватар')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('viber', models.CharField(blank=True, max_length=20, null=True, verbose_name='Вайбер')),
                ('telegram', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телеграм')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='О владельце (заметки)')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('status', models.CharField(blank=True, choices=[('is_active', 'Активен'), ('new', 'Новый'), ('disable', 'Отключен')], default='new', max_length=16, null=True, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('director', 'Директор'), ('manager', 'Менеджер'), ('accountant', 'Бухгалтер'), ('electric', 'Электрик'), ('plumber', 'Сантехник')], default='director', max_length=16, verbose_name='Роль')),
                ('has_statistics', models.BooleanField(default=False, verbose_name='Доступ к статистике')),
                ('has_cashbox', models.BooleanField(default=False, verbose_name='Доступ к кассе')),
                ('has_invoice', models.BooleanField(default=False, verbose_name='Доступ к квитанциям')),
                ('has_personal_account', models.BooleanField(default=False, verbose_name='Доступ к лицевым счетам')),
                ('has_apartment', models.BooleanField(default=False, verbose_name='Доступ к квартирам')),
                ('has_owner', models.BooleanField(default=False, verbose_name='Доступ к владельцам квартир')),
                ('has_house', models.BooleanField(default=False, verbose_name='Доступ к домам')),
                ('has_message', models.BooleanField(default=False, verbose_name='Доступ к сообщениям')),
                ('has_application', models.BooleanField(default=False, verbose_name='Доступ к заявкам вызова мастера')),
                ('has_meter', models.BooleanField(default=False, verbose_name='Доступ к показаниям счетчиков')),
                ('has_site_management', models.BooleanField(default=False, verbose_name='Доступ к управлению сайтом')),
                ('has_service', models.BooleanField(default=False, verbose_name='Доступ к услугам')),
                ('has_tariff', models.BooleanField(default=False, verbose_name='Доступ к тарифам')),
                ('has_role', models.BooleanField(default=False, verbose_name='Доступ к ролям')),
                ('has_users', models.BooleanField(default=False, verbose_name='Доступ к пользователям')),
                ('has_requisites', models.BooleanField(default=False, verbose_name='Доступ к реквизитам')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=128, verbose_name='Тема сообщения')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('sender', models.CharField(max_length=128, verbose_name='Отправитель')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Получатели')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.AddField(
            model_name='userprofile',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.role', verbose_name='Роль'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
